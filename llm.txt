# llm.txt — Project Summary for LLM Agents

PROJECT: coffee-ahk

pnpm task updateCONSTRAINTS:
- All output targets AutoHotkey v1 (case-insensitive, no property accessors, no real module system, no boolean type)
- Class names simulated as case-sensitive (uppercase letters → full-width Unicode)
- No support: optional chaining, getter/setter, implicit return, NaN/null/undefined, full import/export, npm
- .coffee: UTF-8; .ahk: UTF-8 with BOM
- CoffeeScript export is simulated (closure var/return)
- Variable/function/parameter names cannot conflict with class names

DIRECTORY STRUCTURE:
- src/           # Core source code (TypeScript, ESM, .ts only)
- src/formatters/    # Per-token syntax mapping (fine-grained)
- src/processors/    # Whole-content, batch transforms (coarse-grained)
- src/models/, src/types/ # Core types: Content, Item, Scope
- src/file/      # IO, cache, source resolution
- src/logger/    # Logging
- src/formator/  # Function formatting
- src/picker/    # Code selection/combination
- src/renderer/  # Output rendering
- src/utils/     # Helpers
- data/          # Config, forbidden, sync rules
- script/test/   # Test cases (.coffee/.ahk, 1:1 mapping)
- task/          # Project automation scripts (build, test, publish, update, watch, etc.), used for development, testing, publishing, dependency management, and maintenance.

TASK USAGE:
- pnpm task <taskName> (e.g. pnpm task build, pnpm task test, pnpm task publish)
- task/index.ts dispatches any script in task/ by name

DATA FLOW:
- Input: .coffee file/string
- Read: src/file/read.ts
- Parse/Transform: src/entry/index.ts, src/formatters/, src/processors/
- Output: .ahk via src/file/write.ts
- Logging: src/logger/index.ts

IMPORT/EXPORT:
- import 'xxx': .coffee wrapped in closure, others inserted directly
- import entry from 'xxx': entry = __SALT_module_ID__.default
- import { x } from 'xxx': x = __SALT_module_ID__.x
- All dependencies processed recursively, deduped, tracked via cache
- All exports unified as returned object at end of module closure

TRANSFORMATION:
- Only .coffee, .ahk, .json, .yaml supported
- Recursive, cache-driven transformation
- All export statements collected and removed; single return at end
- .ahk files wrapped in code blocks in output
- Salt-based variable naming for imports

TYPES/ARTIFACTS:
- Input: .coffee, .ahk, .json, .yaml text/path
- Intermediate: AST, formatting objects, logs, cache
- Output: .ahk text/file
- Key types: Content, Item, Scope

ERROR FORMAT:
- throw new Error('ahk/file: ...') or throw new Error('ahk/class-case: ...')

TESTING:
- All test cases in script/test/ (.coffee/.ahk, 1:1 mapping)
- Test runner: transpile .coffee, compare to .ahk
- pnpm test — batch; pnpm test xxx — single; pnpm test overwrite — overwrite all .ahk

MAINTENANCE:
- Update this summary after any structure/core/config change. Always verify with real code.

# END
