import { getName, write } from 'fire-keeper'
import iconv from 'iconv-lite'

import { version } from '../../package.json'

import type { PartialOptions } from '..'
import type Item from '../models/Item'

const MAX_LINE_LENGTH = 200

const generateVersion = () => {
  const group = version.split('.').map(Number)
  return [group[0], group[1], group[2] + 1].join('.')
}

const main = async (
  source: string,
  data: {
    ast: Item[]
    content: string
  },
  options: PartialOptions,
): Promise<void> => {
  const { basename, dirname } = getName(source)

  // 检查行宽限制
  const ahkContent = iconv
    .encode(
      options.metadata
        ? [`; Generated by Coffee-AHK/${generateVersion()}`, data.content].join(
            '\n',
          )
        : data.content,
      'utf8',
      {
        addBOM: true,
      },
    )
    .toString()

  const lines = ahkContent.split('\n')
  for (let i = 0; i < lines.length; i++) {
    if (lines[i].length > MAX_LINE_LENGTH) {
      throw new Error(
        `Line too long at line ${i + 1}: file/write/1\n${lines[i].slice(0, 80)}...`,
      )
    }
  }

  await write(`${dirname}/${basename}.ahk`, ahkContent)

  if (options.ast) await write(`${dirname}/${basename}.ast.json`, data.ast)
}

export default main
